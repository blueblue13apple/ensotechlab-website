---
import Layout from '../layouts/Layout.astro';
import { createClient } from 'microcms-js-sdk'; // microCMS SDKをインポート
import { format } from 'date-fns';

// microCMSクライアントの初期化
const client = createClient({
  serviceDomain: import.meta.env.MICROCMS_SERVICE_DOMAIN,
  apiKey: import.meta.env.MICROCMS_API_KEY,
});

// pages APIから単一コンテンツを取得
const pageContent = await client.get({ endpoint: 'pages' });

// news APIから最新の情報を取得 (例: 最新3件)
const newsList = await client.get({ endpoint: 'news', queries: { limit: 3, orders: '-publishedAt' } });

// リッチエディタの内容をHTMLとして表示するための関数
function renderRichText(htmlString) {
  return htmlString ? { set: 'html', value: htmlString } : null;
}

// ページ内の各セクションを識別するためのマーク（HTMLコメント）
// これらのマークを使って、pageContent.bodyから各セクションを抽出する想定
// 例: // この処理はフロントエンドで複雑になるため、今回はbody全体を表示します。
// 将来的にbodyをより細かくCMSで分割するか、JSでセクションごとに解析するなどの対応が必要になります。
---
<Layout title="EnsoTechLab | 自然とAIが織りなす、持続可能な未来の農業">
  <main>
    <section class="hero-section">
      <div class="container">
        {pageContent.title && <h1>{pageContent.title}</h1>}
        <div class="hero-body">
          {renderRichText(pageContent.body)}
        </div>
      </div>
    </section>

    <section class="latest-news-section">
      <div class="container">
        <h2>最新情報</h2>
        {newsList.contents && newsList.contents.length > 0 ? (
          <div class="news-grid">
            {newsList.contents.map((news) => (
              <article class="news-item">
                <h3><a href={`/news/${news.slug}`}>{news.title}</a></h3>
                <p class="news-date">{format(new Date(news.publishedAt), 'yyyy.MM.dd')}</p>
                {news.thumbnail && <img src={news.thumbnail.url} alt={news.title} class="news-thumbnail" />}
                <p>{news.body.slice(0, 100)}...</p> {/* 冒頭を抜粋 */}
                <a href={`/news/${news.slug}`} class="read-more">続きを読む</a>
              </article>
            ))}
          </div>
        ) : (
          <p>現在、新しいお知らせはありません。</p>
        )}
        <div class="text-center mt-4">
          <a href="/news" class="btn-primary">すべてのお知らせを見る</a>
        </div>
      </div>
    </section>

  </main>
</Layout>

<style>
  /* 基本的なスタイルはglobal.cssに記述。
     ここではセクションごとのレイアウトや要素の調整 */
  .hero-section {
    background-color: #e0f2f7;
    padding: 80px 0;
    text-align: center;
  }
  .hero-section h1 {
    font-size: 2.5em;
    color: #2c3e50;
    margin-bottom: 20px;
  }
  .hero-body p {
    font-size: 1.1em;
    line-height: 1.6;
    max-width: 800px;
    margin: 0 auto 30px;
  }
  .hero-body a {
    color: #007bff;
    text-decoration: none;
    font-weight: bold;
  }
  .latest-news-section {
    padding: 60px 0;
    background-color: #f8f8f8;
    text-align: center;
  }
  .latest-news-section h2 {
    font-size: 2em;
    color: #2c3e50;
    margin-bottom: 40px;
  }
  .news-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 30px;
    max-width: 1000px;
    margin: 0 auto;
  }
  .news-item {
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    padding: 20px;
    text-align: left;
    display: flex;
    flex-direction: column;
  }
  .news-item h3 {
    font-size: 1.3em;
    margin-bottom: 10px;
  }
  .news-item h3 a {
    color: #34495e;
    text-decoration: none;
  }
  .news-item h3 a:hover {
    color: #007bff;
  }
  .news-item .news-date {
    font-size: 0.9em;
    color: #7f8c8d;
    margin-bottom: 15px;
  }
  .news-item .news-thumbnail {
    max-width: 100%;
    height: auto;
    border-radius: 4px;
    margin-bottom: 15px;
  }
  .news-item p {
    font-size: 0.95em;
    line-height: 1.5;
    color: #555;
    flex-grow: 1; /* 本文の長さが違ってもボタンの位置を揃える */
  }
  .news-item .read-more {
    display: inline-block;
    margin-top: 15px;
    color: #007bff;
    text-decoration: none;
    font-weight: bold;
  }
  .news-item .read-more:hover {
    text-decoration: underline;
  }
</style>