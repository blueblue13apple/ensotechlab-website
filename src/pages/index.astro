---
// src/pages/index.astro
import Layout from '../layouts/Layout.astro';
import { createClient } from 'microcms-js-sdk';
import { format } from 'date-fns';

// ★重要★ Layout.astro からヘルパー関数をインポート
import { renderHtmlContent, stripHtmlTags } from '../utils/string';

// microCMSクライアントの初期化
const client = createClient({
  serviceDomain: import.meta.env.MICROCMS_SERVICE_DOMAIN,
  apiKey: import.meta.env.MICROCMS_API_KEY,
});

// pages APIから単一コンテンツを取得
const pageContent = await client.get({ endpoint: 'pages', queries: { limit: 1 } });

// news APIから最新の情報を取得 (例: 最新3件)
const newsList = await client.get({ endpoint: 'news', queries: { limit: 3, orders: '-publishedAt' } });
---

{/* ★重要★ html, head, body タグは Layout.astro が提供するため、ここでは記述しません。 */}
{/* Layout コンポーネントを直接記述し、propsを渡します。 */}
<Layout title="EnsoTechLab | AIと人間が織りなす持続可能な未来" description="AIテクノロジーと自然の調和を通じて、人々と地球が共に豊かになる未来を追求するEnsoTechLabの公式ウェブサイトです。">
  <main>
    {/* 新しいヒーローセクション */}
    <section class="hero-container">
      <div class="hero-content">
        <h1>AIと人間が織りなす、<br>持続可能な未来の創造</h1>
        <p>私たちEnsoTechLabは、AIテクノロジーと自然の調和を通じて、<br>人々と地球が共に豊かになる未来を追求します。</p>
        <p>このホームページは、**AIと私の協業**によって実現しました。</p>
      </div>
    </section>

    {/* 既存のニュースセクション */}
    <section class="latest-news-section">
      <div class="container">
        <h2>最新情報</h2>
        {newsList.contents && newsList.contents.length > 0 ? (
          <div class="news-grid">
            {newsList.contents.map((news) => (
              <article class="news-item">
                <h3><a href={`/news/${news.slug}`}>{news.title}</a></h3>
                <p class="news-date">{format(new Date(news.publishedAt), 'yyyy.MM.dd')}</p>
                {news.thumbnail && <img src={news.thumbnail.url} alt={news.title} class="news-thumbnail" />}
                {/* ★修正点★ stripHtmlTags を使って本文からタグを除去 */}
                <p>{stripHtmlTags(news.body).slice(0, 100)}...</p>
                <a href={`/news/${news.slug}`} class="read-more">続きを読む</a>
              </article>
            ))}
          </div>
        ) : (
          <p>現在、新しいお知らせはありません。</p>
        )}
        <div class="text-center mt-4">
          <a href="/news" class="btn-primary">すべてのお知らせを見る</a>
        </div>
      </div>
    </section>

  </main>
</Layout>

<style>
  /* ========== ここには hero-container に特化したスタイルのみを記述 ========== */
  .hero-container {
    position: relative;
    width: 100%;
    height: 100vh; /* 画面の高さいっぱいに広がる */
    display: flex;
    flex-direction: column; /* 要素を縦に並べる */
    align-items: center;
    justify-content: center;
    background-image: url('/images/ai-nature-city.webp'); /* ★ここに保存した画像ファイルのパスを指定★ */
    background-size: cover;
    background-position: center center;
    background-repeat: no-repeat;
    background-attachment: fixed; /* スクロールしても背景を固定 */
    color: white; /* ヒーローテキストの色 */
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7); /* 文字の視認性向上のための影 */
    overflow: hidden; /* 子要素の溢れを防ぐ */
  }

  /* 背景画像の上に重ねる半透明のオーバーレイ */
  .hero-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.3); /* 半透明の黒いオーバーレイで文字を読みやすくする */
    z-index: 0; /* 背景画像のすぐ上に配置 */
  }

  .hero-content {
    position: relative;
    z-index: 1; /* オーバーレイより手前に配置 */
    text-align: center;
    max-width: 900px; /* コンテンツの最大幅を制限 */
    padding: 20px;
  }

  .hero-content h1 {
    font-size: 3.8em; /* ヒーローの見出しを大きく */
    margin-bottom: 0.4em;
    line-height: 1.2;
  }

  .hero-content p {
    font-size: 1.3em;
    line-height: 1.7;
    margin-bottom: 1.5em;
  }

  /* レスポンシブ対応 (スマートフォンの場合) */
  @media (max-width: 768px) {
    .hero-content h1 {
      font-size: 2.8em;
    }
    .hero-content p {
      font-size: 1.1em;
    }
    .hero-container {
      background-size: auto 100%; /* 高さに合わせて画像を表示 */
      background-position: center top; /* 上部に寄せて表示 */
    }
  }
  /*
    Layout.astroのis:globalに移動した共通スタイルはここから削除されています。
    もしここでスタイルが適用されていないと感じたら、Layout.astroのis:globalスタイルを再度確認してください。
  */
</style>